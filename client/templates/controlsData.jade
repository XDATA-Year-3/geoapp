//- This expects the following values to be passed in:
  key : main key for all references
  name : user visible name to show (e.g., 'trip')
  names : user visible plural name to show (e.g., 'trips')
  capname : user visible capitalized name to show (e.g., 'Trip')
  capnames : user visible capitalized plural name to show (e.g., 'Trips')
  title : title shown on the layer panel
  description : a description for the panel
  showSource : a boolean.  Show the source selector if true
  checkSource : a boolean.  Show check boxes for sources if true
  color : a color for the legend
  recent.pointColor : recent point color
  recent.oldPointColor : old point color
  controls : a list of objects of which controls to expose.  Each item
             contains:
    key : control key
    name : name of the control
    title : tooltip (optional)
    placeholder : placeholder for the text
    type : one of search, text, boolean, dateRange, float, floatRange, int,
           intRange, combobox, other
    options : if type is combobox, a list of options, each of which contains:
      value : the value to use for the option
      text : the text to display in the combobox
  fieldColors : an optional list of ways of coloring points.  Each item
                contains:
    field : the internal numerical field that is used for coloring
    text : the value to show in a drop down
    legend : the value to show with the legend
    range : an array of values sorted low to high for specific colors.
            Anything beyond the ends of the range are at those colors,
            otherwise colors are piecewise interpolated through the range
            values.  Each item in the array contains:
      value : the numerical value associated with a color.
      color : a css color color for that value.
include standardPanel.jade
+standardPanel('ga-'+key+'-settings-panel', 'ga-'+key+'-settings',
    title, description, key)
  .ga-filter-controls(ga-section-name=key)
    .form-group(class=(showSource ? '' : 'hidden'))
      label(for="ga-"+key+"-source") Data Source
      select.form-control.input-sm.source-control(
          title="Database "+names+" source", taxifield=key+"_source",
          id="ga-"+key+"-source")
      //- the database source options are dynamically set in controls.js
    each ctl in controls
      .form-group(title=ctl.title, logid="ga-"+key+"-"+ctl.key)
        label(for="ga-"+key+"-"+ctl.key, class="ga-control-"+ctl.type) #{ctl.name}
        if ctl.type === 'combobox'
          select.combobox.form-control.input-sm(id="ga-"+key+"-"+ctl.key,
              type="text", placeholder=ctl.placeholder, title=ctl.description,
              taxifield=key+"_field_"+ctl.key, taxitype=ctl.type)
            option
            option(value="__blank__") &lt; All &gt;
            each opt in ctl.options
              option(value=opt.value) #{opt.text}
        else
          input.form-control.input-sm(id="ga-"+key+"-"+ctl.key,
              type="text", placeholder=ctl.placeholder, title=ctl.description,
              taxifield=key+"_field_"+ctl.key, taxitype=ctl.type)
    if (checkSource)
      .form-group.source-control-check(title="Data Sources",
          logid="ga-"+key+"-checksource", id="ga-"+key+"-source-check",
          panelkey=key)
      //- the database source options are dynamically set in controls.js
    .form-group
      button.btn.btn-default.btn-sm(id="ga-"+key+"-filter",
          title="Load "+names+" from the database")
        i.icon-ok
        |  Filter
      .ga-loading-spinner.hidden(id="ga-"+key+"-loading")
        i.icon-spin1.animate-spin
      span.ga-data-loaded(id="ga-"+key+"-loaded")
      label.ga-slider-label(for="ga-data-"+key,
        title="Maximum number of "+names+" to load.  Loading more "+names+" takes longer and produces more accurate binning.") Max #{capnames}
      input.form-control.input-sm.ga-slider-ctl(id="ga-data-"+key,
          type="text", data-slider-min="10000", data-slider-max="1000000",
          data-slider-step="5000", data-slider-value="50000",
          data-slider-handle="square", data-slider-scale="logarithmic",
          data-slider-id="ga-slider-ctl-points-"+key,
          taxifield="max_field_"+key, taxitype="int")
  .ga-display-controls(ga-section-name=key)
    .form-group
      span(title="Show "+name+" data")
        input.form-control.input-sm(id="ga-show-"+key+"-data",
          type="checkbox", checked="checked",
          taxifield="show-"+key+"-data", taxitype="boolean")
        label(for="ga-show-"+key+"-data") Show #{capnames}
  .ga-display-controls(ga-section-name=key)
    .form-group
      label(for="ga-display-"+key+"-process") Processing
      select.form-control.input-sm(id="ga-display-"+key+"-process"
          title="Processing",
          taxifield="display-process-"+key)
        option(value="raw") Individual #{capnames}
        option(value="binned") Binned Heatmap
    if (fieldColors && fieldColors.length > 0)
      .form-group(id="ga-display-"+key+"-field-color-group")
        label(for="ga-display-"+key+"-field-color") Color
        select.form-control.input-sm(id="ga-display-"+key+"-field-color"
            title="Color",
            taxifield="display-"+key+"-field-color")
          option(value="__blank__") Solid
          each field in fieldColors
            option(value=field.field) #{field.text}
    .form-group
      span(id="ga-display-max-"+key+"-points-group")
        label.ga-slider-label(for="ga-display-max-"+key+"-points",
          title="Maximum number of "+name+" points to display.") Max Points
        input.form-control.input-sm.ga-slider-ctl(
            id="ga-display-max-"+key+"-points",
            type="text", data-slider-min="10000",
            data-slider-max="1000000", data-slider-step="5000",
            data-slider-value="25000", data-slider-handle="square",
            data-slider-scale="logarithmic",
            data-slider-id="ga-slider-ctl-points-max-"+key,
            taxifield="display-max-"+key+"-points", taxitype="int")
      span.hidden(id="ga-display-"+key+"-num-bins-group")
        label(for="ga-display-"+key+"-num-bins") Bins
        input.form-control.input-sm.ga-slider-ctl(
            id="ga-display-"+key+"-num-bins",
            type="text", data-slider-min="5",
            data-slider-max="30", data-slider-step="1",
            data-slider-value="15", data-slider-handle="square",
            data-slider-id="ga-slider-ctl-bins-"+key,
            taxifield="display-"+key+"-num-bins", taxitype="int")
      span(id="ga-"+key+"-opacity-group")
        label.ga-slider-label(for="ga-"+key+"-opacity",
          title="Opacity of "+name+" points.") Opacity
        input.form-control.input-sm.ga-slider-ctl(id="ga-"+key+"-opacity",
            type="text", data-slider-min="0.004",
            data-slider-max="1", data-slider-step="0.004",
            data-slider-value="0.1", data-slider-handle="square",
            data-slider-id="ga-data-opacity-ctl",
            data-slider-scale="logarithmic",
            taxifield=key+"-opacity", taxitype="float")
  .ga-legend(ga-section-name=key)
    .form-group
      .ga-legend-item.hidden(class="legend-"+key+" "+key+"-raw")
        i.icon-circle(style="color:"+color)
        | #{capname}
      if (recent && recent.pointColor && recent.oldPointColor)
        .ga-legend-item.legend-item-new.hidden(class="legend-"+key+" "+key+"-raw")
          i.icon-circle(style="color:"+recent.pointColor)
          | Recent #{capname}
        .ga-legend-item.legend-item-old.hidden(class="legend-"+key+" "+key+"-raw")
          i.icon-circle(style="color:"+recent.oldPointColor)
          | Older #{capname}
      each field in (fieldColors || [])
        each entry in field.range
          .ga-legend-item.hidden(class="legend-"+key+" "+key+"-raw legend-item-field-"+field.field)
            | #{entry === field.range[0] ? (field.legend || field.text) + ' ' : ''}
            i.icon-circle(style="color:"+entry.color)
            | !{entry === field.range[0] ? '&le; ' : entry === field.range[field.range.length-1] ? '&ge; ' : ''}
            | #{entry.value}
      .ga-legend-item.ga-legend-binned.hidden(class="legend-"+key+" "+key+"-binned")
        i.icon-stop(style="color:"+color)
        | Many #{capnames}
      .ga-legend-item.ga-legend-binned.faint.hidden(class="legend-"+key+" "+key+"-binned")
        i.icon-stop(style="color:"+color)
        | Few #{capnames}
